// Code generated by cdpgen. DO NOT EDIT.

package animation

import (
	"github.com/mafredri/cdp/rpcc"
)

// CreatedClient receives AnimationCreated events.
type CreatedClient interface {
	// Recv calls RecvMsg on rpcc.Stream, blocks until the event is
	// triggered, context canceled or connection closed.
	Recv() (*CreatedReply, error)
	rpcc.Stream
}

// CreatedReply event for each animation that has been created.
type CreatedReply struct {
	ID string `json:"id"` // Id of the animation that was created.
}

// StartedClient receives AnimationStarted events.
type StartedClient interface {
	// Recv calls RecvMsg on rpcc.Stream, blocks until the event is
	// triggered, context canceled or connection closed.
	Recv() (*StartedReply, error)
	rpcc.Stream
}

// StartedReply event for animation that has been started.
type StartedReply struct {
	Animation Animation `json:"animation"` // Animation that was started.
}

// CanceledClient receives AnimationCanceled events.
type CanceledClient interface {
	// Recv calls RecvMsg on rpcc.Stream, blocks until the event is
	// triggered, context canceled or connection closed.
	Recv() (*CanceledReply, error)
	rpcc.Stream
}

// CanceledReply event for when an animation has been canceled.
type CanceledReply struct {
	ID string `json:"id"` // Id of the animation that was canceled.
}
