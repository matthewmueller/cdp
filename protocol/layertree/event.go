// Code generated by cdpgen. DO NOT EDIT.

package layertree

import (
	"github.com/mafredri/cdp/protocol/dom"
	"github.com/mafredri/cdp/rpcc"
)

// DidChangeClient receives LayerTreeDidChange events.
type DidChangeClient interface {
	// Recv calls RecvMsg on rpcc.Stream, blocks until the event is
	// triggered, context canceled or connection closed.
	Recv() (*DidChangeReply, error)
	rpcc.Stream
}

// DidChangeReply
type DidChangeReply struct {
	Layers []Layer `json:"layers,omitempty"` // Layer tree, absent if not in the comspositing mode.
}

// LayerPaintedClient receives LayerPainted events.
type LayerPaintedClient interface {
	// Recv calls RecvMsg on rpcc.Stream, blocks until the event is
	// triggered, context canceled or connection closed.
	Recv() (*LayerPaintedReply, error)
	rpcc.Stream
}

// LayerPaintedReply
type LayerPaintedReply struct {
	LayerID LayerID  `json:"layerId"` // The id of the painted layer.
	Clip    dom.Rect `json:"clip"`    // Clip rectangle.
}
