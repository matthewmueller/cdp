// Code generated by cdpgen. DO NOT EDIT.

package profiler

import (
	"github.com/mafredri/cdp/protocol/debugger"
	"github.com/mafredri/cdp/rpcc"
)

// ConsoleProfileStartedClient receives ConsoleProfileStarted events.
type ConsoleProfileStartedClient interface {
	// Recv calls RecvMsg on rpcc.Stream, blocks until the event is
	// triggered, context canceled or connection closed.
	Recv() (*ConsoleProfileStartedReply, error)
	rpcc.Stream
}

// ConsoleProfileStartedReply sent when new profile recording is started using console.profile() call.
type ConsoleProfileStartedReply struct {
	ID       string            `json:"id"`              //
	Location debugger.Location `json:"location"`        // Location of console.profile().
	Title    *string           `json:"title,omitempty"` // Profile title passed as an argument to console.profile().
}

// ConsoleProfileFinishedClient receives ConsoleProfileFinished events.
type ConsoleProfileFinishedClient interface {
	// Recv calls RecvMsg on rpcc.Stream, blocks until the event is
	// triggered, context canceled or connection closed.
	Recv() (*ConsoleProfileFinishedReply, error)
	rpcc.Stream
}

// ConsoleProfileFinishedReply
type ConsoleProfileFinishedReply struct {
	ID       string            `json:"id"`              //
	Location debugger.Location `json:"location"`        // Location of console.profileEnd().
	Profile  Profile           `json:"profile"`         //
	Title    *string           `json:"title,omitempty"` // Profile title passed as an argument to console.profile().
}
