// Code generated by cdpgen. DO NOT EDIT.

package domsnapshot

import (
	"github.com/mafredri/cdp/protocol/css"
	"github.com/mafredri/cdp/protocol/dom"
	"github.com/mafredri/cdp/protocol/page"
)

// DOMNode A Node in the DOM tree.
type DOMNode struct {
	NodeType              int               `json:"nodeType"`                        // Node's nodeType.
	NodeName              string            `json:"nodeName"`                        // Node's nodeName.
	NodeValue             string            `json:"nodeValue"`                       // Node's nodeValue.
	BackendNodeID         dom.BackendNodeID `json:"backendNodeId"`                   // Node's id, corresponds to DOM.Node.backendNodeId.
	ChildNodeIndexes      []int             `json:"childNodeIndexes,omitempty"`      // The indexes of the node's child nodes in the domNodes array returned by getSnapshot, if any.
	Attributes            []NameValue       `json:"attributes,omitempty"`            // Attributes of an Element node.
	PseudoElementIndexes  []int             `json:"pseudoElementIndexes,omitempty"`  // Indexes of pseudo elements associated with this node in the domNodes array returned by getSnapshot, if any.
	LayoutNodeIndex       *int              `json:"layoutNodeIndex,omitempty"`       // The index of the node's related layout tree node in the layoutTreeNodes array returned by getSnapshot, if any.
	DocumentURL           *string           `json:"documentURL,omitempty"`           // Document URL that Document or FrameOwner node points to.
	BaseURL               *string           `json:"baseURL,omitempty"`               // Base URL that Document or FrameOwner node uses for URL completion.
	ContentLanguage       *string           `json:"contentLanguage,omitempty"`       // Only set for documents, contains the document's content language.
	PublicID              *string           `json:"publicId,omitempty"`              // DocumentType node's publicId.
	SystemID              *string           `json:"systemId,omitempty"`              // DocumentType node's systemId.
	FrameID               *page.FrameID     `json:"frameId,omitempty"`               // Frame ID for frame owner elements.
	ContentDocumentIndex  *int              `json:"contentDocumentIndex,omitempty"`  // The index of a frame owner element's content document in the domNodes array returned by getSnapshot, if any.
	ImportedDocumentIndex *int              `json:"importedDocumentIndex,omitempty"` // Index of the imported document's node of a link element in the domNodes array returned by getSnapshot, if any.
	TemplateContentIndex  *int              `json:"templateContentIndex,omitempty"`  // Index of the content node of a template element in the domNodes array returned by getSnapshot.
	PseudoType            *dom.PseudoType   `json:"pseudoType,omitempty"`            // Type of a pseudo element node.
	IsClickable           *bool             `json:"isClickable,omitempty"`           // Whether this DOM node responds to mouse clicks. This includes nodes that have had click event listeners attached via JavaScript as well as anchor tags that naturally navigate when clicked.
}

// LayoutTreeNode Details of an element in the DOM tree with a LayoutObject.
type LayoutTreeNode struct {
	DOMNodeIndex    int                 `json:"domNodeIndex"`              // The index of the related DOM node in the domNodes array returned by getSnapshot.
	BoundingBox     dom.Rect            `json:"boundingBox"`               // The absolute position bounding box.
	LayoutText      *string             `json:"layoutText,omitempty"`      // Contents of the LayoutText, if any.
	InlineTextNodes []css.InlineTextBox `json:"inlineTextNodes,omitempty"` // The post-layout inline text nodes, if any.
	StyleIndex      *int                `json:"styleIndex,omitempty"`      // Index into the computedStyles array returned by getSnapshot.
}

// ComputedStyle A subset of the full ComputedStyle as defined by the request whitelist.
type ComputedStyle struct {
	Properties []NameValue `json:"properties"` // Name/value pairs of computed style properties.
}

// NameValue A name/value pair.
type NameValue struct {
	Name  string `json:"name"`  // Attribute/property name.
	Value string `json:"value"` // Attribute/property value.
}
